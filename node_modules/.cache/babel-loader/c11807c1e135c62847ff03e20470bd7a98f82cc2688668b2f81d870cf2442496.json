{"ast":null,"code":"var _jsxFileName = \"/Users/dinhngochien/Documents/Thao Bui/Programming/Mycode/ReactJS/todo-list-react/src/components/TaskList.js\";\nimport React from \"react\";\nimport TaskItem from \"../TaskItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks,\n  showIncomplete,\n  setTaskStatus,\n  removeTask,\n  setShowIncomplete\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.filter(task => showIncomplete ? task.status !== 1 : true).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        setTaskStatus: setTaskStatus,\n        removeTask: removeTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        className: \"filter-lable\",\n        children: \"Show incompleted tasks only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"filter\",\n        checked: showIncomplete,\n        onChange: e => setShowIncomplete(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","showIncomplete","setTaskStatus","removeTask","setShowIncomplete","children","className","filter","task","status","map","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/dinhngochien/Documents/Thao Bui/Programming/Mycode/ReactJS/todo-list-react/src/components/TaskList.js"],"sourcesContent":["import React from \"react\";\nimport TaskItem from \"../TaskItem\";\n\nfunction TaskList({ tasks, showIncomplete, setTaskStatus, removeTask , setShowIncomplete}) {\n  return (\n    <>\n    <ul className=\"task-list\">\n      {tasks\n        .filter((task) => (showIncomplete ? task.status !== 1 : true))\n        .map((task) => (\n          <TaskItem\n          key={task.id}\n            task={task}\n            setTaskStatus={setTaskStatus}\n            removeTask={removeTask}\n          />\n        ))}\n    </ul>\n    <div className=\"filter-wrapper\">\n    <label htmlFor=\"filter\" className=\"filter-lable\">\n      Show incompleted tasks only\n    </label>\n    <input\n      type=\"checkbox\"\n      id=\"filter\"\n      checked={showIncomplete}\n      onChange={(e) => setShowIncomplete(e.target.checked)}\n    ></input>\n  </div>\n  </>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC,aAAa;EAAEC,UAAU;EAAGC;AAAiB,CAAC,EAAE;EACzF,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACAT,OAAA;MAAIU,SAAS,EAAC,WAAW;MAAAD,QAAA,EACtBL,KAAK,CACHO,MAAM,CAAEC,IAAI,IAAMP,cAAc,GAAGO,IAAI,CAACC,MAAM,KAAK,CAAC,GAAG,IAAK,CAAC,CAC7DC,GAAG,CAAEF,IAAI,iBACRZ,OAAA,CAACF,QAAQ;QAEPc,IAAI,EAAEA,IAAK;QACXN,aAAa,EAAEA,aAAc;QAC7BC,UAAU,EAAEA;MAAW,GAHpBK,IAAI,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLnB,OAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC/BT,OAAA;QAAOoB,OAAO,EAAC,QAAQ;QAACV,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAEjD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRnB,OAAA;QACEqB,IAAI,EAAC,UAAU;QACfN,EAAE,EAAC,QAAQ;QACXO,OAAO,EAAEjB,cAAe;QACxBkB,QAAQ,EAAGC,CAAC,IAAKhB,iBAAiB,CAACgB,CAAC,CAACC,MAAM,CAACH,OAAO;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACJ,CAAC;AAEL;AAACO,EAAA,GA5BQvB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}