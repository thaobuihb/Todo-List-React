{"ast":null,"code":"var _jsxFileName = \"/Users/dinhngochien/Documents/Thao Bui/Programming/Mycode/ReactJS/todo-list-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: \"task1\",\n    title: \"Learn JS fundamental\",\n    status: 0\n  }, {\n    id: \"task1\",\n    title: \"Code a Todo List level 2\",\n    status: 1\n  }]);\n  const [showIncomplete, setShowIncomplete] = useState(true);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newTask) {\n      const task = {\n        id: Date.now(),\n        title: newTask,\n        status: 0\n      };\n      setTasks([...tasks, task]);\n      setNewTask(\"\");\n    }\n  };\n  const handleInputChange = e => {\n    setNewTask(e.target.value);\n  };\n  const setTaskStatus = (taskId, status) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          status: status ? 1 : 0\n        };\n      }\n      return task;\n    }));\n  };\n  const removeTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.filter(task => showIncomplete ? task.status !== 1 : true).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.status ? \"done\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"btn-action btn-action-done\",\n            checked: Boolean(task.status),\n            onChange: e => setTaskStatus(task.id, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTask(task.id),\n            className: \"btn-action btn-action-delete\",\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        className: \"filter-lable\",\n        children: \"Show incompleted tasks only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"filter\",\n        checked: showIncomplete,\n        onChange: e => setShowIncomplete(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newitem\",\n        children: \"Add to the todo list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newitem\",\n        value: newTask,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X1sk2FurYIbZwwU4daBROSb1OoI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","title","status","showIncomplete","setShowIncomplete","newTask","setNewTask","handleSubmit","e","preventDefault","task","Date","now","handleInputChange","target","value","setTaskStatus","taskId","map","removeTask","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","Boolean","onChange","onClick","htmlFor","onSubmit","_c","$RefreshReg$"],"sources":["/Users/dinhngochien/Documents/Thao Bui/Programming/Mycode/ReactJS/todo-list-react/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { id: \"task1\", title: \"Learn JS fundamental\", status: 0 },\n    { id: \"task1\", title: \"Code a Todo List level 2\", status: 1 },\n  ]);\n  const [showIncomplete, setShowIncomplete] = useState(true);\n\n  const [newTask, setNewTask] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (newTask) {\n      const task = {\n        id: Date.now(),\n        title: newTask,\n        status: 0,\n      };\n      setTasks([...tasks, task]);\n      setNewTask(\"\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const setTaskStatus = (taskId, status) => {\n    setTasks(tasks.map(task => {\n      if (task.id === taskId) {\n        return {...task, status: status ? 1 : 0}\n      }\n      return task;\n    }))\n  }\n  \n  const removeTask =(taskId) => {\n    setTasks(tasks.filter(task => task.id !== taskId))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header/>\n      <ul className=\"task-list\">\n        {tasks\n          .filter((task) => (showIncomplete ? task.status !== 1 : true))\n          .map((task) => (\n            <li key={task.id} className={task.status ? \"done\" : \"\"}>\n              <span className=\"label\">{task.title}</span>\n              <div className=\"actions\">\n                <input\n                  type=\"checkbox\"\n                  className=\"btn-action btn-action-done\"\n                  checked={Boolean(task.status)}\n                  onChange={(e) => setTaskStatus(task.id, e.target.checked)}\n                ></input>\n                <button onClick={() => removeTask(task.id)} className=\"btn-action btn-action-delete\">âœ–</button>\n              </div>\n            </li>\n          ))}\n      </ul>\n      <div className=\"filter-wrapper\">\n        <label htmlFor=\"filter\" className=\"filter-lable\">\n          Show incompleted tasks only\n        </label>\n        <input\n          type=\"checkbox\"\n          id=\"filter\"\n          checked={showIncomplete}\n          onChange={(e) => setShowIncomplete(e.target.checked)}\n        ></input>\n      </div>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label htmlFor=\"newitem\">Add to the todo list</label>\n        <input\n          type=\"text\"\n          id=\"newitem\"\n          value={newTask}\n          onChange={handleInputChange}\n        ></input>\n        <button type=\"submit\">Add Item</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}